EXPORT=DATABASE.IN:DATABASE
EXPORT=SERVER.LISTEN:PORT

## TEMPLATES

'target' -> ENCLOSING CreateListTemplate(transparency/Render)
'./templates/list.html' -> IN ReadListTemplate(filesystem/ReadFileSync) OUT -> TEMPLATE CreateListTemplate()

## DATABASE

Database(core/Split) OUT -> DATABASE List(example-todo-server/Get)
Database() OUT -> DATABASE GetActive(example-todo-server/Get)
Database() OUT -> SERVER UpdateDb(pgorm/Write)

## HTTP

'/list' -> MATCH ListTodos(woute/Match)
'/active' -> MATCH GetActiveTodos(woute/Match)
'/update' -> MATCH UpdateTodos(woute/Match)
'POST' -> METHOD UpdateTodos()

Server(webserver/Server) REQUEST -> IN BodyParser(webserver/BodyParser) OUT -> IN ListTodos() FAIL -> IN GetActiveTodos() FAIL -> IN UpdateTodos() FAIL -> IN Missing(woute/Match)
Output(core/Merge) OUT -> IN SendResponse(webserver/SendResponse)

# Listing TODOs

'id,LIKE,\'%%\'' -> QUERY List()
ListTodos() OUT -> IN List() PROCOUT -> PROCIN List() OUT -> IN Output()

# Getting only active TODOs

'completed,=,true' -> QUERY GetActive()
GetActiveTodos() OUT -> IN GetActive() PROCOUT -> PROCIN GetActive() OUT -> IN Output()

# Creating/Updating TODOs

'true' -> KEEP UpdateQuery(cache/Cache)
'todos' -> GROUP UpdateTable(core/Group)
'completed,=,true' -> IN ArrayifyUpdateQuery(adapters/TupleToArray) OUT -> IN UpdateTable() OUT -> IN UpdateQuery()

'body' -> IN ArrayifyUpdatePattern(adapters/TupleToArray) OUT -> PATTERN LiftUpdateBody(lift/Lift)
LiftUpdateBody() EXTOKEN -> GROUP UpdateToken(core/Group)
'1' -> THRESHOLD ReadUpdateToken()
'^headers$' -> REGEXP RemoveHeaders(groups/RemoveGroups)

UpdateTodos() OUT -> IN UpdateToGroups(woute/ToGroups) OUT -> IN LiftUpdateBody() EXTRACTED -> IN RemoveUpdateInputGroups(groups/RemoveGroups) OUT -> IN ConvertUpdateInput(adapters/ObjectToPackets) OUT -> IN UpdateToken() OUT -> IN UpdateDb()
UpdateDb() ERROR -> IN UpdateDbError(core/Output)
UpdateDb() OUT -> IN ReadUpdateToken(groups/ReadGroups)
ReadUpdateToken() GROUP -> RETOKEN LiftUpdateBody()
ReadUpdateToken() OUT -> IN ArrayifyUpdateOutput(adapters/PacketsToArray) OUT -> IN JsonifyUpdateOutput(strings/Jsonify) OUT -> RETURN LiftUpdateBody() OUT -> IN RemoveHeaders() OUT -> IN UpdateFromGroups(woute/FromGroups) OUT -> IN Output()

# Missing TODOs

Missing() OUT -> IN Output()
